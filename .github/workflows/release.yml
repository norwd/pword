---

name: "Release"
run-name: "Release workflow started by @${{ github.actor }}"
permissions: read-all

on:
  push:
    branches:
      - main

jobs:

  publish:
    name: 'Publish a Release'
    runs-on: ubuntu-latest
    permissions: write-all
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '^1'

      - name: Install Latest
        shell: bash
        run: go install github.com/norwd/pword@latest

      - name: Build
        shell: bash
        run: go build .

      - name: Determine Version
        id: version
        shell: bash
        run: |
          pword   --version | tr '[:space:]' '\n' | grep '^v[0-9]\+\.[0-9]\+\.[0-9]\+$' > version-old.txt
          ./pword --version | tr '[:space:]' '\n' | grep '^v[0-9]\+\.[0-9]\+\.[0-9]\+$' > version-new.txt

          echo "prev=$(cat version-old.txt)" >> "${GITHUB_OUTPUT}"
          echo "next=$(cat version-new.txt)" >> "${GITHUB_OUTPUT}"

      - name: Release ${{ steps.version.outputs.next }}
        if: steps.version.outputs.prev != steps.version.outputs.next
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -F tag_name='${{ steps.version.outputs.next }}' \
            -F target_commitish='${{ github.ref_name }}' \
            -F name='${{ steps.version.outputs.next }} ðŸ”‘ðŸ”’ðŸ’»' \
            -F body='' \
            -F draft=false \
            -F prerelease=true \
            -F generate_release_notes=true \
            "/repos/${{ github.repository }}/releases" > release.json

      - name: Archive Version Numbers
        uses: actions/upload-artifact@v3
        with:
          name: version-data
          path: |
            version-old.txt
            version-new.txt

      - name: Archive API Responses
        uses: actions/upload-artifact@v3
        with:
          name: api-data
          path: |
            release.json
