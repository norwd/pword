---

name: "Release"
run-name: "Release workflow started by @${{ github.actor }}"
permissions: read-all

on:
  push:
    branches: ['main']
    paths: ['internal/cmd/version.go']

defaults:
  run:
    shell: bash

concurrency:
  group: release
  cancel-in-progress: true

jobs:

  publish:
    name: 'Publish a Release'
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      version: ${{ steps.version.outputs.next }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '^1'

      - name: Install Latest
        run: go install github.com/norwd/pword@latest

      - name: Build
        run: go build .

      - name: Determine Version
        id: version
        run: |
          pword   --version | tr '[:space:]' '\n' | grep '^v[0-9]\+\.[0-9]\+\.[0-9]\+$' > version-old.txt
          ./pword --version | tr '[:space:]' '\n' | grep '^v[0-9]\+\.[0-9]\+\.[0-9]\+$' > version-new.txt

          echo "prev=$(cat version-old.txt)" | tee -a "${GITHUB_OUTPUT}"
          echo "next=$(cat version-new.txt)" | tee -a "${GITHUB_OUTPUT}"

      - name: Release ${{ steps.version.outputs.next }}
        if: steps.version.outputs.prev != steps.version.outputs.next
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: "gh release create ${{ steps.version.outputs.next }} \\\n  --title '${{ steps.version.outputs.next }} \U0001F511\U0001F512\U0001F4BB' \\\n  --generate-notes \\\n  --prerelease \\\n  --target main | tee release.txt\n  #magic___^_^___line\n"
      - name: Archive Version Numbers
        uses: actions/upload-artifact@v3
        with:
          name: version-data
          path: |
            version-old.txt
            version-new.txt

      - name: Archive API Responses
        uses: actions/upload-artifact@v3
        with:
          name: api-data
          path: |
            release.txt

  release-assets:
    needs: publish
    name: Release Go Binary
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      matrix:
        goos: ['linux', 'windows', 'darwin']
        goarch: ['386', 'amd64', 'arm64']
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Release ${{ matrix.goos }}/${{ matrix.goarch }}
        uses: wangyoucao577/go-release-action@v1.33
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          release_tag: ${{ needs.publish.outputs.version }}
          extra_files: LICENSE README.md CITATION.cff
          md5sum: false
          sha256sum: true
